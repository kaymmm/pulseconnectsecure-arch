--- rpm/usr/local/pulse/PulseClient.sh	2017-03-29 09:47:24.000000000 -0700
+++ PulseClient.sh	2017-09-12 13:18:48.850937611 -0700
@@ -17,7 +17,16 @@
 PACKAGE_TYPE_DEB=2
 SCRNAME=`basename $0`
 
-SUPPORTED_OSTYPES_LIST=( CENTOS_6 CENTOS_7 UBUNTU_14 UBUNTU_15 UBUNTU_16 FEDORA RHEL_7 UNSUPPORTED)
+SUPPORTED_OSTYPES_LIST=( ARCH CENTOS_6 CENTOS_7 UBUNTU_14 UBUNTU_15 UBUNTU_16 FEDORA RHEL_7 UNSUPPORTED)
+#Arch
+ARCH_DEPENDENCIES=( glibc \
+                    nss \
+                    glib-networking \
+                    libproxy \
+                    libxmu \
+                    lib32-zlib \
+                    lib32-libstdc++5)
+
 #RPM Based
 CENTOS_6_DEPENDENCIES=( glibc \
                         nss-softokn-freebl \
@@ -148,6 +157,27 @@
     declare -r ${name}=$i
 done
 
+install_arch() {
+    i=$1
+    sudo -v > /dev/null 2>/dev/null
+    if [ $? -eq 0 ]; then 
+        echo "sudo password : "
+        sudo pacman -S $i 
+        if [ $? -ne 0 ]; then
+            echo "Failed to install dependencies.Please execute following command manually."
+            echo " sudo pacman -S $i"
+        fi
+    else 
+        echo "super user password : "
+        su -c " pacman -S $i"
+        if [ $? -ne 0 ]; then
+            echo "Failed to install dependencies.Please execute following command manually."
+            echo " pacman -S $i"
+        fi
+    fi
+
+}
+
 install_deb() {
     i=$1
     sudo -v > /dev/null 2>/dev/null
@@ -249,6 +279,10 @@
         else
             OS_TYPE=${SUPPORTED_OSTYPES_LIST[$UNSUPPORTED]}
         fi
+    elif [ -f /etc/arch-release ]; then
+        OS_TYPE=${SUPPORTED_OSTYPES_LIST[$ARCH]}
+        OS_MAJOR_VERSION=0
+        INSTALLDIR=/opt/pulse
     else 
         OS_MAJOR_VERSION=6 #Every other flavour uses webkitgtk-1.0
         OSNAME=$(lsb_release -d | grep -o "Ubuntu")
@@ -315,6 +349,7 @@
     if [ $OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UNSUPPORTED]} ]; then
         return 
     fi
+    isArchBased=0
     isRpmBased=0
     isDebBased=0
     dependencyListName=${OS_TYPE}_DEPENDENCIES
@@ -322,12 +357,14 @@
     if [[ ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$CENTOS_6]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$CENTOS_7]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$FEDORA]}) || \
-        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$RHEL_7]})]]; then
+        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$RHEL_7]}) ]]; then
         isRpmBased=1
     elif [[ ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_14]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_15]}) || \
-        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_16]})]]; then
+        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_16]}) ]]; then
         isDebBased=1
+    elif [[ $OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$ARCH]} ]]; then
+        isArchBased=1
     fi
  
     if [ $isRpmBased = 1 ]; then
@@ -406,6 +443,29 @@
             done
         fi 
         echo ""
+    elif [ $isArchBased = 1 ]; then
+        eval "depListArr=(\${${dependencyListName}[@]})"
+        # eval "depListArrWithVersion=(\${${dependencyListNameWithVersion}[@]})"
+        tam=${#depListArr[@]}
+        PKGREQ=""
+        for ((i=0; i < $tam; i++)); do
+            depPkgName=${depListArr[i]}
+            curPkgVar=`pacman -Q | grep -i $depPkgName`
+            if [ "X$curPkgVar" = "X" ]; then
+                echo "$depPkgName is missing in the machine" > $LOG
+                PKGREQ="$PKGREQ ${depListArr[i]}"
+            fi 
+        done
+        if [ "X" != "X$PKGREQ" ]; then
+            # Install respective packages based on the current installation
+            echo ""
+            echo "Please execute below commands to install missing dependent packages "
+            for i in `echo $PKGREQ`
+            do
+                echo "pacman -S $i"
+            done
+        fi
+        echo $readMeEchoMsg
     fi
 }
 ######################################################################################################
@@ -421,18 +481,21 @@
     if [ $OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UNSUPPORTED]} ]; then
         return 
     fi
+    ARCH_DIST=0
     RPM_DIST=0
     DPKG_DIST=0
 
     if [[ ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$CENTOS_6]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$CENTOS_7]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$FEDORA]}) || \
-        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$RHEL_7]})]]; then
+        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$RHEL_7]}) ]]; then
         RPM_DIST=1
     elif [[ ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_14]}) || \
         ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_15]}) || \
-        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_16]})]]; then
+        ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$UBUNTU_16]}) ]]; then
         DPKG_DIST=1
+    elif [[ ($OS_TYPE = ${SUPPORTED_OSTYPES_LIST[$ARCH]}) ]]; then
+        ARCH_DIST=1
     fi
 
     if [ $RPM_DIST -eq 1 ]; then 
@@ -498,6 +561,46 @@
                 fi
             fi
         fi
+    elif [ $ARCH_DIST -eq 1 ]; then 
+        PKGREQ=""
+        glibc=`pacman -Q | grep -i glibc`
+        if [ "X$glibc" = "X" ]; then
+            echo "glibc is missing in the machine" > $LOG
+            PKGREQ="glibc"
+        fi  
+        nss=`pacman -Q | grep -i nss`
+        if [ "X$nss" = "X" ]; then 
+            echo "nss is missing in the machine" > $LOG
+            PKGREQ="$PKGREQ nss"
+        fi  
+        zlib=`pacman -Q | grep -i lib32-zlib`
+        if [ "X$zlib" = "X" ]; then 
+            echo "lib32-zlib is missing in the machine" > $LOG
+            PKGREQ="$PKGREQ lib32-zlib"
+        fi
+        stdc=`pacman -Q | grep -i lib32-libstdc++5`
+        if [ "X$stdc" = "X" ]; then 
+            echo "lib32-libstdc++ is missing in the machine" > $LOG
+            PKGREQ="$PKGREQ lib32-libstdc++5"
+        fi
+        if [ "X" != "X$PKGREQ" ]; then
+            sudo -v > /dev/null 2>/dev/null
+            if [ $? -eq 0 ]; then 
+                echo "sudo password "
+                sudo pacman -S $PKGREQ
+                if [ $? -ne 0 ]; then
+                    echo "Failed to install dependencies.Please execute following command manually."
+                    echo " pacman -S $PKGREQ"
+                fi
+            else 
+                echo "super user password "
+                su -c "pacman -S $PKGREQ"
+                if [ $? -ne 0 ]; then
+                    echo "Failed to install dependencies.Please execute following command manually."
+                    echo " pacman -S $PKGREQ"
+                fi
+            fi 
+        fi
     fi 
     
     if [ ! -e $INSTALLDIR ]; then 
@@ -520,7 +623,7 @@
     # LD_LIBRARY_PATH is updated to use /usr/local/pulse/libsoup-2.4.so in CentOS6.4
     # This library will be present only in the case of CentOS6.4 but setting 
     # LD_LIBRARY_PATH for other platforms will not be harmful. 
-    export LD_LIBRARY_PATH=/usr/local/pulse:$LD_LIBRARY_PATH
+    export LD_LIBRARY_PATH=$INSTALLDIR:$LD_LIBRARY_PATH
 
     echo "executing command : $INSTALLDIR/$SVCNAME $args" 
     # -C option added to indicate service is launched from command line - hidden option
